<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<html>
<head>
<title>Tkinter对话框控件</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<style type="text/css">
/* GitHub stylesheet for MarkdownPad (http://markdownpad.com) */
/* Author: Nicolas Hery - http://nicolashery.com */
/* Version: b13fe65ca28d2e568c6ed5d7f06581183df8f2ff */
/* Source: https://github.com/nicolahery/markdownpad-github */

/* RESET
=============================================================================*/

html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
}

/* BODY
=============================================================================*/

body {
  font-family: Helvetica, arial, freesans, clean, sans-serif;
  font-size: 14px;
  line-height: 1.6;
  color: #333;
  background-color: #fff;
  padding: 20px;
  max-width: 960px;
  margin: 0 auto;
}

body>*:first-child {
  margin-top: 0 !important;
}

body>*:last-child {
  margin-bottom: 0 !important;
}

/* BLOCKS
=============================================================================*/

p, blockquote, ul, ol, dl, table, pre {
  margin: 15px 0;
}

/* HEADERS
=============================================================================*/

h1, h2, h3, h4, h5, h6 {
  margin: 20px 0 10px;
  padding: 0;
  font-weight: bold;
  -webkit-font-smoothing: antialiased;
}

h1 tt, h1 code, h2 tt, h2 code, h3 tt, h3 code, h4 tt, h4 code, h5 tt, h5 code, h6 tt, h6 code {
  font-size: inherit;
}

h1 {
  font-size: 28px;
  color: #000;
}

h2 {
  font-size: 24px;
  border-bottom: 1px solid #ccc;
  color: #000;
}

h3 {
  font-size: 18px;
}

h4 {
  font-size: 16px;
}

h5 {
  font-size: 14px;
}

h6 {
  color: #777;
  font-size: 14px;
}

body>h2:first-child, body>h1:first-child, body>h1:first-child+h2, body>h3:first-child, body>h4:first-child, body>h5:first-child, body>h6:first-child {
  margin-top: 0;
  padding-top: 0;
}

a:first-child h1, a:first-child h2, a:first-child h3, a:first-child h4, a:first-child h5, a:first-child h6 {
  margin-top: 0;
  padding-top: 0;
}

h1+p, h2+p, h3+p, h4+p, h5+p, h6+p {
  margin-top: 10px;
}

/* LINKS
=============================================================================*/

a {
  color: #4183C4;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

/* LISTS
=============================================================================*/

ul, ol {
  padding-left: 30px;
}

ul li > :first-child, 
ol li > :first-child, 
ul li ul:first-of-type, 
ol li ol:first-of-type, 
ul li ol:first-of-type, 
ol li ul:first-of-type {
  margin-top: 0px;
}

ul ul, ul ol, ol ol, ol ul {
  margin-bottom: 0;
}

dl {
  padding: 0;
}

dl dt {
  font-size: 14px;
  font-weight: bold;
  font-style: italic;
  padding: 0;
  margin: 15px 0 5px;
}

dl dt:first-child {
  padding: 0;
}

dl dt>:first-child {
  margin-top: 0px;
}

dl dt>:last-child {
  margin-bottom: 0px;
}

dl dd {
  margin: 0 0 15px;
  padding: 0 15px;
}

dl dd>:first-child {
  margin-top: 0px;
}

dl dd>:last-child {
  margin-bottom: 0px;
}

/* CODE
=============================================================================*/

pre, code, tt {
  font-size: 12px;
  font-family: Consolas, "Liberation Mono", Courier, monospace;
}

code, tt {
  margin: 0 0px;
  padding: 0px 0px;
  white-space: nowrap;
  border: 1px solid #eaeaea;
  background-color: #f8f8f8;
  border-radius: 3px;
}

pre>code {
  margin: 0;
  padding: 0;
  white-space: pre;
  border: none;
  background: transparent;
}

pre {
  background-color: #f8f8f8;
  border: 1px solid #ccc;
  font-size: 13px;
  line-height: 19px;
  overflow: auto;
  padding: 6px 10px;
  border-radius: 3px;
}

pre code, pre tt {
  background-color: transparent;
  border: none;
}

kbd {
    -moz-border-bottom-colors: none;
    -moz-border-left-colors: none;
    -moz-border-right-colors: none;
    -moz-border-top-colors: none;
    background-color: #DDDDDD;
    background-image: linear-gradient(#F1F1F1, #DDDDDD);
    background-repeat: repeat-x;
    border-color: #DDDDDD #CCCCCC #CCCCCC #DDDDDD;
    border-image: none;
    border-radius: 2px 2px 2px 2px;
    border-style: solid;
    border-width: 1px;
    font-family: "Helvetica Neue",Helvetica,Arial,sans-serif;
    line-height: 10px;
    padding: 1px 4px;
}

/* QUOTES
=============================================================================*/

blockquote {
  border-left: 4px solid #DDD;
  padding: 0 15px;
  color: #777;
}

blockquote>:first-child {
  margin-top: 0px;
}

blockquote>:last-child {
  margin-bottom: 0px;
}

/* HORIZONTAL RULES
=============================================================================*/

hr {
  clear: both;
  margin: 15px 0;
  height: 0px;
  overflow: hidden;
  border: none;
  background: transparent;
  border-bottom: 4px solid #ddd;
  padding: 0;
}

/* TABLES
=============================================================================*/

table th {
  font-weight: bold;
}

table th, table td {
  border: 1px solid #ccc;
  padding: 6px 13px;
}

table tr {
  border-top: 1px solid #ccc;
  background-color: #fff;
}

table tr:nth-child(2n) {
  background-color: #f8f8f8;
}

/* IMAGES
=============================================================================*/

img {
  max-width: 100%
}
</style>
</head>
<body>
<h1>Tkinter对话框控件</h1>
<p>除了基本的控件之外，Tkinter 还提供了三种对话框控件：</p>
<ul>
<li>
<p>文件选择对话框：filedailog</p>
</li>
<li>
<p>颜色选择对话框：colorchooser</p>
</li>
<li>
<p>消息对话框：messagebox</p>
</li>
</ul>
<p>这些对话框的使用能够在一定程度上增强用户的交互体验，下面对这些对话框控件进行详细地介绍。</p>
<h2>文件选择对话框</h2>
<p>文件对话框在 GUI 程序中经常的使用到，比如上传文档需要从本地选择一个文件，包括文件的打开和保存功能都需要一个文件对话框来实现。Tkinter 提供文件对话框被封装在tkinter.filedailog模块中，该模块提供了有关文件对话框的常用函数，经常使用的有以下几个：</p>
<p><br /></p>
<table>
<tbody>
<tr>
<th>
方法</th>
<th>
说明</th>
</tr>
<tr>
<td>
Open()</td>
<td>
打开个某个文件</td>
</tr>
<tr>
<td>
SaveAs()</td>
<td>
打开一个保存文件的对话框</td>
</tr>
<tr>
<td>
askopenfilename()</td>
<td>
打开某个文件，并以包函文件名的路径作为返回值</td>
</tr>
<tr>
<td>
askopenfilenames()</td>
<td>
同时打开多个文件，并以元组形式返回多个文件名</td>
</tr>
<tr>
<td>
askopenfile()</td>
<td>
打开文件，并返回文件流对象</td>
</tr>
<tr>
<td>
askopenfiles()</td>
<td>
打开多个文件，并以列表形式返回多个文件流对象</td>
</tr>
<tr>
<td>
asksaveasfilename()</td>
<td>
选择以什么文件名保存文件，并返回文件名</td>
</tr>
<tr>
<td>
asksaveasfile()</td>
<td>
选择以什么类型保存文件，并返回文件流对象</td>
</tr>
<tr>
<td>
askdirectory</td>
<td>
选择目录，并返回目录名</td>
</tr>
</tbody>
</table>
<p><br />
上述方法的常用参数值如下所示：<br />
<br /></p>
<table>
<tbody>
<tr>
<th>
参数</th>
<th>
说明</th>
</tr>
<tr>
<td>
defaultextension</td>
<td>
指定文件的后缀名，当保存文件时自动添加文件名，如果自动添加了文件的后缀名，则该选项值不会生效</td>
</tr>
<tr>
<td>
filetypes</td>
<td>
指定筛选文件类型的下拉菜单选项，该选项值是由 2 元祖构成的列表，其中每个二元祖由两部分组成 (类型名,后缀)，比如 filetypes = [(&quot;PNG&quot;,&quot;*.png&quot;), (&quot;JPG&quot;, &quot;*.jpg&quot;), (&quot;GIF&quot;,&quot;*.gif&quot;),(&quot;文本文件&quot;,&quot;*.txt&quot;)...]&nbsp;</td>
</tr>
<tr>
<td>
initialdir</td>
<td>
指定打开/保存文件的默认路径，默认路径是当前文件夹</td>
</tr>
<tr>
<td>
parent</td>
<td>
&nbsp;如果不指定该选项，那么对话框默认显示在根窗口上，通过设置该参数可以使得对话框显示在子窗口上</td>
</tr>
<tr>
<td>
title</td>
<td>
指定文件对话框的标题</td>
</tr>
</tbody>
</table>
<p><br /></p>
<p>下面看一组具体的实例应用：</p>
<pre><code>from tkinter import *
import tkinter.filedialog  # 注意次数要将文件对话框导入

# 定义一个处理文件的相关函数
def askfile():
    # 从本地选择一个文件，并返回文件的目录
    filename = tkinter.filedialog.askopenfilename()
    if filename != '':
         lb.config(text= filename)
    else:
         lb.config(text='您没有选择任何文件')

root = Tk()
root.config(bg='#87CEEB')
root.title(&quot;C语言中文网&quot;)
root.geometry('400x200+300+300')
root.iconbitmap('C:/Users/Administrator/Desktop/C语言中文网logo.ico')
btn=Button(root,text='选择文件',relief=RAISED,command=askfile)
btn.grid(row=0,column=0)
lb = Label(root,text='',bg='#87CEEB')
lb.grid(row=0,column=1,padx=5)
# 显示窗口
root.mainloop()
</code></pre>

<p>程序运行结果：</p>
<p><img src="http://c.biancheng.net/uploads/allimg/220105/11445931E-0.gif" alt="1" /></p>
<p>下面再看一组“保存文件”的示例代码如下：</p>
<pre><code>import tkinter as tk
from tkinter import filedialog
from PIL import Image

def open_img():
    try:
        global img
        filepath = filedialog.askopenfilename() # 打开文件，返回该文件的完整路径
        filename.set(filepath)
        img = Image.open(filename.get())
    except Exception as e:
        print(&quot;您没有选择任何文件&quot;,e)


def save_png():
    try:

        filetypes = [(&quot;PNG&quot;,&quot;*.png&quot;), (&quot;JPG&quot;, &quot;*.jpg&quot;), (&quot;GIF&quot;,&quot;*.gif&quot;),(&quot;txt files&quot;,&quot;*.txt&quot;),('All files','*')]
        # 返回一个 pathname 文件路径字符串，如果取消或者关闭则返回空字符，返回文件如何操作是后续代码的事情，
        # 该函数知识返回选择文件的文件名字，不具备保存文件的能力
        filenewpath= filedialog.asksaveasfilename(title='保存文件',
                                                filetypes=filetypes,
                                                defaultextension='.png',
                                                initialdir='C:/Users/Administrator/Desktop' )
        path_var.set(filenewpath)
        # 保存文件
        img.save(str(path_var.get()))
    except Exception as e:
        print(e)

window = tk.Tk()
window.title(&quot;C语言中文网&quot;)
window.geometry('400x200+300+300')
window.iconbitmap('C:/Users/Administrator/Desktop/C语言中文网logo.ico')

filename = tk.StringVar()
path_var = tk.StringVar()
# 定义读取文件的组件
entry = tk.Entry(window, textvariable=filename)
entry.grid(row=1, column=0, padx=5, pady=5)
tk.Button(window, text='选择文件', command=open_img).grid(row=1, column=1, padx=5, pady=5)

# 定义保存文件的组件
entry1 = tk.Entry(window, textvariable=path_var)
entry1.grid(row=2, column=0, padx=5, pady=5)
tk.Button(window, text='保存文件', command=save_png).grid(row=2, column=1, padx=5, pady=5)
window.mainloop()
</code></pre>

<p>程序运行结果：</p>
<p><img src="http://c.biancheng.net/uploads/allimg/220105/114459E26-1.gif" alt="1" /></p>
<h2>颜色选择对话框</h2>
<p>颜色选择对话框（colorchooser），提供了一个非常友善的颜色面板，它允许用户选择自己所需要的颜色。 当用户在面板上选择一个颜色并按下“确定”按钮后，它会返回一个二元祖，其第 1 个元素是选择的 RGB 颜色值，第 2 个元素是对应的 16 进制颜色值。</p>
<p><br /></p>
<table>
<tbody>
<tr>
<th>
方法</th>
<th>
说明</th>
</tr>
<tr>
<td>
askcolor()</td>
<td>
打开一个颜色对话框，并将用户选择的颜色值以元组的形式返回（没选择返回None），格式为((R, G, B), &quot;#rrggbb&quot;)</td>
</tr>
<tr>
<td>
Chooser()</td>
<td>
打开一个颜色对话框，并用户选择颜色确定后，返回一个二元组，格式为（(R, G, B), &quot;#rrggbb&quot;）</td>
</tr>
</tbody>
</table>
<p><br />
常用的颜色对话框的参数值如下表所示：<br />
<br /></p>
<table>
<tbody>
<tr>
<th>
属性</th>
<th>
说明</th>
</tr>
<tr>
<td>
default</td>
<td>
要显示的初始的颜色，默认颜色是浅灰色（light gray）</td>
</tr>
<tr>
<td>
title</td>
<td>
指定颜色选择器标题栏的文本，默认标题为&ldquo;颜色&rdquo;</td>
</tr>
<tr>
<td>
parent</td>
<td>
1. 如果不指定该选项，那么对话框默认显示在根窗口上<br />
2. 如果想要将对话框显示在子窗口上，那么可以设置&nbsp;parent = 子窗口对象</td>
</tr>
</tbody>
</table>
<p><br />
下面看一组简单的使用示例：</p>
<pre><code>import tkinter as tk
from tkinter import colorchooser
root = tk.Tk()
root.title(&quot;颜色选择&quot;)
root.geometry('400x200+300+300')
root.iconbitmap('C:/Users/Administrator/Desktop/C语言中文网logo.ico')

def callback():
    # 打开颜色对话款
    colorvalue = tk.colorchooser.askcolor()
    # 在颜色面板点击确定后，会在窗口显示二元组颜色值
    lb.config(text='颜色值:'+ str(colorvalue))

lb=tk.Label(root,text='',font=('宋体',10))
# 将label标签放置在主窗口
lb.pack()
tk.Button(root, text=&quot;点击选择颜色&quot;, command=callback, width=10, bg='#9AC0CD').pack()
# 显示界面
root.mainloop()
</code></pre>

<p>颜色对话框如下所示：</p>
<p><img src="http://c.biancheng.net/uploads/allimg/220105/11445a206-2.gif" alt="1" /></p>
<p>上述程序的运行结果如下：</p>
<p><img src="http://c.biancheng.net/uploads/allimg/220105/1144594291-3.gif" alt="1" /></p>
<h2>消息对话框</h2>
<p>关于消息对话款（messagebox），在前面介绍其他控件时已经使用过，在本节仅对它做简单介绍。</p>
<p>消息对话框主要起到信息提示、警告、说明、询问等作用，通常配合“事件函数”一起使用，比如执行某个操作出现了错误，然后弹出错误消息提示框。通过使用消息对话框可以提升用户的交互体验，也使得 GUI 程序更加人性化。消息对话框主要包含了以下常用方法：</p>
<p><br /></p>
<table>
<tbody>
<tr>
<th>
方法</th>
<th>
说明</th>
</tr>
<tr>
<td>
askokcancel(title=None, message=None)</td>
<td>
打开一个&ldquo;确定／取消&rdquo;的对话框</td>
</tr>
<tr>
<td>
askquestion(title=None, message=None)</td>
<td>
打开一个&ldquo;是／否&rdquo;的对话框。</td>
</tr>
<tr>
<td>
askretrycancel(title=None, message=None)</td>
<td>
打开一个&ldquo;重试／取消&rdquo;的对话框</td>
</tr>
<tr>
<td>
askyesno(title=None, message=None)</td>
<td>
打开一个&ldquo;是／否&rdquo;的对话框</td>
</tr>
<tr>
<td>
showerror(title=None, message=None)</td>
<td>
打开一个错误提示对话框</td>
</tr>
<tr>
<td>
showinfo(title=None, message=None)</td>
<td>
打开一个信息提示对话框</td>
</tr>
<tr>
<td>
showwarning(title=None, message=None)</td>
<td>
打开一个警告提示对话框</td>
</tr>
</tbody>
</table>
<p><br />
上述方法拥有相同的选项参数，如下表所示：<br />
<br /></p>
<table>
<tbody>
<tr>
<th>
属性</th>
<th>
说明</th>
</tr>
<tr>
<td>
default</td>
<td>
1. 设置默认的按钮（也就是按下回车响应的那个按钮）<br />
2. 默认是第一个按钮（像&ldquo;确定&rdquo;，&ldquo;是&rdquo;或&ldquo;重试&rdquo;）<br />
3. 可以设置的值根据对话框函数的不同，可以选择 CANCEL，IGNORE，OK，NO，RETRY 或 YES</td>
</tr>
<tr>
<td>
icon</td>
<td>
1. 指定对话框显示的图标<br />
2. 可以指定的值有：ERROR，INFO，QUESTION 或 WARNING<br />
3. 注意：不能指定自己的图标</td>
</tr>
<tr>
<td>
parent</td>
<td>
1. 如果不指定该选项，那么对话框默认显示在根窗口上<br />
2. 如果想要将对话框显示在子窗口上，那么可以设置 parent= 子窗口对象</td>
</tr>
</tbody>
</table>
<p><br /></p>
<p>上述方法的返回值一般会是一个布尔值，或者是“YES”，“NO”，“OK”等，这些方法使用较为简单，此处不进行逐一列举，看个简单的示例即可：</p>
<pre><code>import tkinter.messagebox
result=tkinter.messagebox.askokcancel (&quot;提示&quot;,&quot; 你确定要关闭窗口吗? &quot;)
# 返回布尔值参数
print(result)
</code></pre>

<p><img src="http://c.biancheng.net/uploads/allimg/220105/11445ab1-4.gif" alt="1" /></p>

</body>
</html>
<!-- This document was created with MarkdownPad, the Markdown editor for Windows (http://markdownpad.com) -->
